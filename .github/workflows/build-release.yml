name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~\AppData\Local\pip\Cache
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt

    - name: Build with PyInstaller
      run: |
        pyinstaller --noconsole --hiddenimport win32timezone --name AutofishingApp .\AutofishingGUI.py

    - name: Copy assets folder to dist
      run: |
        if (Test-Path -Path "assets") {
          mkdir -p dist/AutofishingApp/assets
          Copy-Item -Path "assets/*" -Destination "dist/AutofishingApp/assets/" -Recurse
        } else {
          echo "Assets folder not found, skipping"
        }

    - name: Create VERSION file with tag info
      run: |
        $TAG = "${{ github.ref_name }}"
        $VERSION = $TAG -replace '^v', ''
        Set-Content -Path "dist/AutofishingApp/VERSION" -Value $VERSION

    - name: Zip the distribution
      run: |
        Compress-Archive -Path dist/AutofishingApp/* -DestinationPath AutofishingApp-${{ github.ref_name }}.zip

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: AutofishingApp-${{ github.ref_name }}.zip
        name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}